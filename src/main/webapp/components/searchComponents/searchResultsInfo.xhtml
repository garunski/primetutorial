<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:p="http://primefaces.org/ui">

<ui:composition>
    <!-- Search Results Info Box with Integrated Filters -->
    <div class="card mb-4">
        <!-- Results Summary Header -->
        <div class="card-header bg-primary text-white">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h5 class="mb-0">Search Results</h5>
                    <small>
                        <h:outputText value="Showing all jobs" rendered="#{empty param['cluster'] and empty param['pathway'] and empty param['education'] and empty param['category'] and empty param['artsHumanities'] and empty param['businessInfoSystems'] and empty param['engineeringTech'] and empty param['healthServices'] and empty param['architectureEngineering'] and empty param['computerMathematical'] and empty param['healthcarePractitioners'] and empty param['lifeSocialScience']}" />

                        <!-- Career filters -->
                        <h:outputText value="Showing jobs in #{param['cluster']} cluster" rendered="#{not empty param['cluster'] and empty param['pathway']}" />
                        <h:outputText value="Showing jobs in #{param['pathway']} pathway" rendered="#{not empty param['pathway']}" />

                        <!-- Category filter -->
                        <h:outputText value="Showing jobs in #{param['category']} category"
                                      rendered="#{not empty param['category'] and empty param['cluster'] and empty param['pathway'] and empty param['education']}" />
                        <h:outputText value=" in #{param['category']} category"
                                      rendered="#{not empty param['category'] and (not empty param['cluster'] or not empty param['pathway'] or not empty param['education'])}" />

                        <!-- Education level -->
                        <h:outputText value="Showing jobs with #{param['education']} education"
                                      rendered="#{not empty param['education'] and empty param['cluster'] and empty param['pathway'] and empty param['category']}" />
                        <h:outputText value=" and #{param['education']} education"
                                      rendered="#{not empty param['education'] and (not empty param['cluster'] or not empty param['pathway'] or not empty param['category'])}" />

                        <!-- Education clusters -->
                        <h:outputText value="Showing jobs in education clusters: "
                                      rendered="#{(empty param['cluster'] and empty param['pathway'] and empty param['education']) and (not empty param['artsHumanities'] or not empty param['businessInfoSystems'] or not empty param['engineeringTech'] or not empty param['healthServices'])}" />
                        <h:outputText value="Arts &amp; Humanities " rendered="#{not empty param['artsHumanities']}" />
                        <h:outputText value="Business &amp; Info Systems " rendered="#{not empty param['businessInfoSystems']}" />
                        <h:outputText value="Engineering &amp; Tech " rendered="#{not empty param['engineeringTech']}" />
                        <h:outputText value="Health Services " rendered="#{not empty param['healthServices']}" />

                        <!-- STEM disciplines -->
                        <h:outputText value="Showing jobs in STEM disciplines: "
                                      rendered="#{(empty param['cluster'] and empty param['pathway'] and empty param['education'] and empty param['artsHumanities'] and empty param['businessInfoSystems'] and empty param['engineeringTech'] and empty param['healthServices']) and (not empty param['architectureEngineering'] or not empty param['computerMathematical'] or not empty param['healthcarePractitioners'] or not empty param['lifeSocialScience'])}" />
                        <h:outputText value="Architecture &amp; Engineering " rendered="#{not empty param['architectureEngineering']}" />
                        <h:outputText value="Computer &amp; Mathematical " rendered="#{not empty param['computerMathematical']}" />
                        <h:outputText value="Healthcare Practitioners " rendered="#{not empty param['healthcarePractitioners']}" />
                        <h:outputText value="Life &amp; Social Science " rendered="#{not empty param['lifeSocialScience']}" />

                        <h:outputText value=" (#{jobService.totalFilteredResults} results found" />
                        <h:outputText value=", showing #{jobService.startResult}-#{jobService.endResult}" 
                                      rendered="#{jobService.totalPages > 1}" />
                        <h:outputText value=")" />
                    </small>
                </div>
                <div>
                    <h:commandButton value="Save Search"
                                   styleClass="btn btn-light btn-sm me-2"
                                   rendered="#{not empty param['cluster'] or not empty param['pathway'] or not empty param['education'] or not empty param['artsHumanities'] or not empty param['businessInfoSystems'] or not empty param['engineeringTech'] or not empty param['healthServices'] or not empty param['architectureEngineering'] or not empty param['computerMathematical'] or not empty param['healthcarePractitioners'] or not empty param['lifeSocialScience']}" />

                    <h:link outcome="occupationSearchRevised"
                          styleClass="btn btn-outline-light btn-sm"
                          rendered="#{not empty param['cluster'] or not empty param['pathway'] or not empty param['education'] or not empty param['artsHumanities'] or not empty param['businessInfoSystems'] or not empty param['engineeringTech'] or not empty param['healthServices'] or not empty param['architectureEngineering'] or not empty param['computerMathematical'] or not empty param['healthcarePractitioners'] or not empty param['lifeSocialScience']}">
                        <f:param name="page" value="1" />
                        <i class="bi bi-x-circle me-1"></i> Clear Filters
                    </h:link>
                </div>
            </div>
        </div>

        <!-- Horizontal Filters Panel -->
        <div class="card-body bg-light border-bottom">
            <div class="row g-4">
                <!-- Preparation Filter -->
                <div class="col-md-3">
                    <div>
                        <label class="form-label fw-semibold d-block mb-2">Preparation</label>
                        <h:selectOneMenu id="educationSelect"
                                         value="#{searchFilterBean.educationLevel}"
                                         styleClass="form-select form-select-sm"
                                         onchange="applyFilter('education', this.value)">
                            <f:selectItem itemLabel="Select One" itemValue="" />
                            <f:selectItem itemLabel="No Experience Required - Start Right Away" itemValue="jobzone1" />
                            <f:selectItem itemLabel="Short-Term Training (Few Months)" itemValue="jobzone2" />
                            <f:selectItem itemLabel="Moderate Training (1-2 Years)" itemValue="jobzone3" />
                            <f:selectItem itemLabel="College Degree Required (4+ Years)" itemValue="jobzone4" />
                            <f:selectItem itemLabel="Advanced Degree Required (6+ Years)" itemValue="jobzone5" />
                        </h:selectOneMenu>
                    </div>
                </div>

                <!-- Salary Filter -->
                <div class="col-md-4">
                    <div>
                        <label class="form-label fw-semibold d-block mb-2">Minimum Salary</label>
                        <div class="d-flex align-items-center mb-1">
                            <small class="text-muted me-2">$0</small>
                            <h:inputHidden id="salaryInput" value="#{searchFilterBean.salary}" />
                            <input type="range" id="salarySlider"
                                   class="form-range flex-grow-1 mx-2"
                                   min="0"
                                   max="100000"
                                   step="5000"
                                   value="#{searchFilterBean.salary}" />
                            <small class="text-muted ms-2">$100k+</small>
                        </div>
                        <small class="text-primary fw-semibold" id="salaryValue">$0</small>
                    </div>
                </div>

                <!-- Quick Filters -->
                <div class="col-md-5">
                    <div>
                        <label class="form-label fw-semibold d-block mb-2">Quick Filters</label>
                        <div class="d-flex flex-wrap gap-2">
                            <ui:include src="navLink.xhtml">
                                <ui:param name="targetPage" value="#{param['page'] ne null ? param['page'] : '1'}" />
                                <ui:param name="enabled" value="true" />
                                <ui:param name="buttonText" value="Bright Outlook" />
                                <ui:param name="iconClass" value="#{not empty param['brightOutlook'] ? 'bi bi-check-circle-fill text-warning' : 'bi bi-circle text-warning'}" />
                                <ui:param name="styleClass" value="#{not empty param['brightOutlook'] ? 'btn-outline-warning bg-warning bg-opacity-10 text-dark' : 'btn-light border-secondary text-dark'} btn-sm rounded-pill px-3 py-2" />
                                <ui:param name="filterParam" value="brightOutlook" />
                            </ui:include>
                            
                            <ui:include src="navLink.xhtml">
                                <ui:param name="targetPage" value="#{param['page'] ne null ? param['page'] : '1'}" />
                                <ui:param name="enabled" value="true" />
                                <ui:param name="buttonText" value="Green Jobs" />
                                <ui:param name="iconClass" value="#{not empty param['greenJobs'] ? 'bi bi-check-circle-fill text-success' : 'bi bi-circle text-success'}" />
                                <ui:param name="styleClass" value="#{not empty param['greenJobs'] ? 'btn-outline-success bg-success bg-opacity-10 text-dark' : 'btn-light border-secondary text-dark'} btn-sm rounded-pill px-3 py-2" />
                                <ui:param name="filterParam" value="greenJobs" />
                            </ui:include>
                            
                            <ui:include src="navLink.xhtml">
                                <ui:param name="targetPage" value="#{param['page'] ne null ? param['page'] : '1'}" />
                                <ui:param name="enabled" value="true" />
                                <ui:param name="buttonText" value="Apprenticeship" />
                                <ui:param name="iconClass" value="#{not empty param['apprenticeship'] ? 'bi bi-check-circle-fill text-primary' : 'bi bi-circle text-primary'}" />
                                <ui:param name="styleClass" value="#{not empty param['apprenticeship'] ? 'btn-outline-primary bg-primary bg-opacity-10 text-dark' : 'btn-light border-secondary text-dark'} btn-sm rounded-pill px-3 py-2" />
                                <ui:param name="filterParam" value="apprenticeship" />
                            </ui:include>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script type="text/javascript">
        function updateSalaryValue(value) {
            // Update the displayed value
            var formattedValue = value > 0 ? '$' + parseInt(value).toLocaleString() : '$0';
            var salaryValueElement = document.getElementById('salaryValue');
            if (salaryValueElement) {
                salaryValueElement.textContent = formattedValue;
            }
        }

        function applySalaryFilter(value) {
            // Update the displayed value first
            updateSalaryValue(value);

            // Apply the filter (with a small delay to prevent rapid consecutive calls)
            setTimeout(function() {
                if (typeof applyFilter === 'function') {
                    applyFilter('salary', value);
                }
            }, 500);
        }

        // Initialize the displayed value on page load without triggering the filter
        document.addEventListener('DOMContentLoaded', function() {
            var slider = document.getElementById('salarySlider');
            if (slider) {
                // Just update the display without applying the filter
                updateSalaryValue(slider.value);

                // Add event handlers using vanilla JavaScript
                slider.addEventListener('input', function() {
                    updateSalaryValue(this.value);
                });

                slider.addEventListener('change', function() {
                    applySalaryFilter(this.value);
                });
            }
        });
    </script>
</ui:composition>
</html>
